<!doctype html>

<html>
<head>
<meta charset="utf-8" />
<title>Demo - CSV-to-Table</title>
	<style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
</head>

<body>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js">
$(document).ready(function() {
	$.ajax({
		type: "GET",
		url: "C:\Users\Lab\workspace\ROPEIntern\501_20170724.csv",
		dataType: "text/csv",
		success: function(data) {processData(data);}
	});
});

function processData(allText) {
    var allTextLines = allText.split(/\r\n|\n/);
    //var headers = allTextLines[0].split(',');
    var window.lines = [];

    for (var i=1; i<allTextLines.length-1; i++) {
        var data = allTextLines[i].split(',');
        if (data.length == 3) {

            var tarr = [];
            for (var j=0; j<3; j++) {
                tarr.push(data[j]);
            }
            window.lines.push(tarr);
        }
    }
	return(window.lines);
    console.log(window.lines);
}
</script>

 
  
<div id="map"></div>
    <script>
      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 12,
          center: new google.maps.LatLng(43.6507184,-79.3898276),
          mapTypeId: 'terrain'
        });

        // Create a <script> tag and set the USGS URL as the source.
        var script = document.createElement('script');
        // This example uses a local copy of the GeoJSON stored at
        // http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojsonp
        //script.src = 'https://developers.google.com/maps/documentation/javascript/examples/json/earthquake_GeoJSONP.js';
		//script.src = "readTextFileFunction.js";
		
        document.getElementsByTagName('head')[0].appendChild(script);
      }

      // Loop through the results array and place a marker for each
      // set of coordinates.
      window.eqfeed_callback = function(results) {
        for (var i = 0; i < results.features.length; i++) {
          //var coords = results.features[i].geometry.coordinates;
          //var latLng = new google.maps.LatLng(coords[1],coords[0]);
		  var latLng = new google.maps.LatLng(window.lines[i][1], window.lines[i][2]);
          var marker = new google.maps.Marker({
            position: latLng,
            map: map
          });
        }
      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCd3cjlKBlyvG3a-0iwrYuvpxOxHoJRes&callback=initMap">
    </script>
</body>
</html>
